import sqlite3

def get_db_connection():
    conn = sqlite3.connect('glossary.db')
    conn.row_factory = sqlite3.Row
    return conn

def init_db():
    conn = sqlite3.connect('glossary.db')
    cursor = conn.cursor()
    
    # Создание таблицы
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS terms (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            term TEXT NOT NULL,
            definition TEXT NOT NULL
        )
    ''')
    
    # Очистка таблицы
    cursor.execute("DELETE FROM terms")
    
    # Данные для вставки
    terms = [
        ("Блокчейн (Blockchain)", "Технология распределённого реестра, которая обеспечивает прозрачность, безопасность и неизменность данных. Каждая транзакция в блокчейне записывается в блок, который связан с предыдущим"),
        ("Цифровая реклама", "Рекламные материалы и кампании, размещённые в интернете через различные каналы, такие как социальные сети, поисковые системы, сайты и мобильные приложения"),
        ("Смарт-контракт (Smart Contract)", "Программируемый контракт, который выполняется автоматически при выполнении заранее заданных условий. Смарт-контракты работают на платформах блокчейн"),
        ("Node.js", "Среда выполнения JavaScript, которая позволяет запускать JavaScript на серверной стороне"),
        ("TypeScript", "Надмножество JavaScript, которое добавляет строгую типизацию и другие функциональные возможности"),
        ("Ethereum", "Платформа для разработки смарт-контрактов и децентрализованных приложений (DApps), использующая блокчейн"),
        ("IPFS (InterPlanetary File System)", "Система для распределённого хранения данных. IPFS используется для хранения больших файлов и данных в децентрализованной сети"),
        ("Decentralized Finance (DeFi)", "Форма финансовых услуг, которая работает на основе блокчейн-технологий и не требует централизованных посредников, таких как банки"),
        ("Тестирование смарт-контрактов", "Процесс проверки и отладки смарт-контрактов для обеспечения их правильной работы, безопасности и выполнения условий"),
        ("Hardhat", "Среда разработки для Ethereum, которая предоставляет инструменты для тестирования, развертывания и разработки смарт-контрактов"),
        ("Truffle Suite", "Набор инструментов для разработки и тестирования смарт-контрактов на Ethereum, включающий Truffle, Ganache и Drizzle"),
        ("Web3.js", "Библиотека JavaScript для взаимодействия с блокчейном Ethereum")
    ]
    
    # Вставка данных
    cursor.executemany('''
        INSERT INTO terms (term, definition)
        VALUES (?, ?)
    ''', terms)
    
    # Подтверждение и закрытие соединения
    conn.commit()
    conn.close()

# Инициализация базы данных
init_db()
